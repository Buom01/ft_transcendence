version: '3.3'

services:
  ################ Website ################
  app:
    container_name: app
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - ${APP_PORT}:${APP_PORT}
    build:
      target: development
      context: .
      dockerfile: ./docker/Dockerfile
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /etc/localtime:/etc/localtime:ro
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - webnet
  ############ Redis (share .env) ############
  redis:
    container_name: redis
    image: redis:latest
    networks:
      - webnet
  ################ Postgresql ################
  postgres:
    container_name: postgres
    restart: unless-stopped
    image: postgres:14
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - webnet
networks:
  webnet:
volumes:
  pgdata:
