version: '3.3'

services:
  ################ Postgresql ################
  postgres:
    container_name: postgres
    restart: unless-stopped
    image: postgres:14
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    networks:
      - webnet

  ################## Backend #################
  back:
    container_name: back
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - ${BACK_PORT}:${BACK_PORT}
    build:
      context: .
      dockerfile: ./docker/back.Dockerfile
    volumes:
      - './backend/:/usr/src/app'
    command: yarn start:dev
    env_file:
      - .env
    networks:
      - webnet

  ################## Frontend #################
  front:
    container_name: front
    restart: unless-stopped
    ports:
      - ${VITE_PORT}:${VITE_PORT}
    build:
      context: .
      dockerfile: ./docker/front.Dockerfile
    command: yarn dev
    volumes:
      - './frontend/:/usr/src/app'
    env_file:
      - .env
    networks:
      - webnet

  ################## PGadmin ##################
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - 5000:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./docker/pgpass:/tmp/pgpassfile
      - ./docker/servers.json:/pgadmin4/servers.json
    #command:
    #  - "/bin/sh"
    #  - "-c"
    #  - "/venv/bin/python3 ./setup.py --load-servers /pgadmin4/servers.json --user admin@admin.com"
    #entrypoint:
    #  - "/bin/sh"
    #  - "-c"
    #  - "/bin/echo 'postgres:5432:*:user:password' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/bin/echo 'NOPASSWD' | sudo -S /bin/chmod 600 /tmp/pgpassfile"
    #links:
    #  - db:pgsql-server
    networks:
      - webnet

networks:
  webnet:
    driver: bridge
  
volumes:
  pgadmin:
  pgdata:
    driver: local
